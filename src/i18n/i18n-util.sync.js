// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
// @ts-check
/* eslint-disable */

/**
 * @typedef { import('./i18n-types.js').Locales } Locales
 * @typedef { import('./i18n-types.js').Translations } Translations
 */

import { initFormatters } from './formatters.js'

import { loadedFormatters, loadedLocales, locales } from './i18n-util.js'

import en from './en/index.js'
import uk from './uk/index.js'

import en_feature from './en/feature/index.js'
import uk_feature from './uk/feature/index.js'

const localeTranslations = {
	en: {
		...en,
		feature: en_feature
	},
	uk: {
		...uk,
		feature: uk_feature
	},
}

/**
 * @param { Locales } locale
 * @return { void }
 */
export const loadLocale = (locale) => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = /** @type { Translations } */ (/** @type { unknown } */ (localeTranslations[locale]))
	loadFormatters(locale)
}

/**
 * @return { void }
 */
export const loadAllLocales = () => locales.forEach(loadLocale)

/**
 * @param { Locales } locale
 * @return { void }
 */
export const loadFormatters = (locale) =>
	void (loadedFormatters[locale] = initFormatters(locale))
